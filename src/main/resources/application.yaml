spring:

  kafka:
    bootstrap-servers: ${kafka-bootstrap-servers}
    properties:
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${kafka-sasl.jaas.config.username}' password='${kafka-sasl.jaas.config.password}';
      sasl.mechanism: PLAIN
      security.protocol: SASL_SSL
      spring.json.trusted.packages: "*"
      schema.registry.url: ${kafka-schema.registry.url}
      basic.auth.credentials.source: USER_INFO
      basic.auth.user.info: ${kafka-basic.auth.user.info}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: nb-ad-demo-01
      auto-offset-reset: earliest
      client-id: nb-ad-demo-01
    listener:
      ack-mode: manual

  rabbitmq:
    password: password
    port: '5679'
    host: localhost
    username: user

  data:
    mongodb:
      port: '27017'
      host: localhost
      database: loja

app:
  tempo-nack-ms: '10000'
  topico-demo-produtos: demo-produtos
  topico-demo-produtos.DLQ: demo-produtos.DLQ
queue:
  name: teste
